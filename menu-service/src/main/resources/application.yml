server:
  port: ${PORT:8081}

spring:
  application:
    name: menu-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://postgres:5432/restaurant}
    username: ${DB_USER:appuser}
    password: ${DB_PASS:secret}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}
    show-sql: ${SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: ${DB_SCHEMA:menu}
  rabbitmq:
    host: ${RABBIT_HOST:rabbitmq}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USER:guest}
    password: ${RABBIT_PASS:guest}
    virtual-host: ${RABBIT_VHOST:/}

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}
      
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://eureka-server:8761/eureka}
    register-with-eureka: ${EUREKA_REGISTER:true}
    fetch-registry: ${EUREKA_FETCH:true}
  instance:
    prefer-ip-address: ${EUREKA_PREFER_IP:true}

logging:
  level:
    org.springframework.amqp: ${AMQP_LOG:DEBUG}
