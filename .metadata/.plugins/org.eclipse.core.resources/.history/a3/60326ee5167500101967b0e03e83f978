package kitchen;

import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.stereotype.Component;
import java.util.Random;

@Component
public class OrderListener {

	private final ReadyNotifier readyNotifier;
	private final Random random = new Random();
	
	public OrderListener(ReadyNotifier readyNotifier) {
		this.readyNotifier = readyNotifier;
	}
	
	@RabbitListener(queues = "order_created_queue")
	public void handleOrderCreated(String orderId) throws InterruptedException {
		System.out.println("A new order has been recived: ID = " + orderId);
		
		Chef assignedChef = Chef.getRandomChef();
		String chefName = assignedChef.name();
		
		int preparationTime = random.nextInt(5) + 3;
		
		System.out.println("Assigned chef: " + assignedChef);
		System.out.println("Preparation time: " + preparationTime + " seconds");
		
		Thread.sleep(preparationTime * 1000L);
		
		if (preparationTime > 6) {
			System.out.println("Delay warning: Order " + orderId + " took longer than expected.");
		}
		
		OrderEvent event = new OrderEvent(orderId, "READY", assignedChef, preparationTime);
		
		readyNotifier.sendOrderReady(orderId);		
	}
}
