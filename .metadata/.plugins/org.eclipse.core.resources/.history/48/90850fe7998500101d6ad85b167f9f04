package kitchen.store;


import com.fasterxml.jackson.databind.ObjectMapper;
import kitchen.events.OrderEventDto;
import kitchen.repository.KitchenEventRepository;
import org.junit.jupiter.api.Test;
import org.mockito.ArgumentCaptor;

import java.time.Instant;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;
public class KitchenEventStoreTest {

	@Test
    void save_mapsDtoToEntity_andPersists() {
        var repo = mock(KitchenEventRepository.class);
        var store = new KitchenEventStore(repo, new ObjectMapper());

        var dto = new OrderEventDto();
        dto.setEventId("e1");
        dto.setOrderId(10L);
        dto.setEventType("CREATED");
        dto.setSource("ORDER");
        dto.setChef("ANA");
        dto.setPrepSeconds(5);
        dto.setCorrelationId("corr-123");
        dto.setOccuredAt(Instant.now());

        store.save(dto);

        ArgumentCaptor<KitchenEventEntity> captor = ArgumentCaptor.forClass(KitchenEventEntity.class);
        verify(repo).save(captor.capture());

        var e = captor.getValue();
        assertEquals("e1", e.getEventId());
        assertEquals(10L, e.getOrderId());
        assertEquals("CREATED", e.getEventType());
        assertEquals("ORDER", e.getSource());
        assertEquals("ANA", e.getChef());
        assertEquals(5, e.getPrepSeconds());
        assertEquals("corr-123", e.getCorrelationId());
        assertNotNull(e.getOccuredAt());
    }
}
